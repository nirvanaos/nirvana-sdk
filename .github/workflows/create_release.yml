name: Create Release

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events
  create:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  deploy:
    if: github.ref_type == 'branch' && startsWith(github.ref_name, 'release/')
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@main
      - name: Extract release branch version
        id: branch_version
        uses: valadas/get-release-branch-version@v1

      - name: Download artifacts
        uses: dawidd6/action-download-artifact@v9
        with:
          workflow: build.yml
          workflow_conclusion: success
          branch: develop
          path: ./artifacts
          skip_unpack: true					

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: "${{ steps.branch_version.outputs.major }}.${{ steps.branch_version.outputs.minor }}.${{ steps.branch_version.outputs.patch }}"
        with:
          tag_name: $VERSION
          release_name: "Release $VERSION"
          draft: true
          prerelease: false

      - name: Upload SDK
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/nirvana-sdk.zip
          asset_name: nirvana-sdk.zip
          asset_content_type: application/zip

      - name: Upload Tools
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/nirvana-tools-windows-x64.zip
          asset_name: nirvana-tools-windows-x64.zip
          asset_content_type: application/zip

      - name: Upload Core SDK
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/nirvana-core-sdk.zip
          asset_name: nirvana-core-sdk.zip
          asset_content_type: application/zip

      - name: Upload Sources
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/nirvana-sdk-sources.zip
          asset_name: nirvana-sdk-sources.zip
          asset_content_type: application/zip

      - name: Publish release
        uses: StuYarrow/publish-release@v1.1.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          id: ${{ steps.create_release.outputs.id }}
